.editingMetadataContainer {
  width: 100%;
  min-height: 400px;
  padding: 1rem;
  display: grid;
  grid-template-rows: auto auto auto auto auto auto;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-areas:
    "title title title"
    "artist artist artist"
    "description description description"
    "genre tempo tempo"
    "tuning capo capo"
    "difficulty key key";
  gap: 1rem;
}

@media (min-width: 550px) {
  .editingMetadataContainer {
    width: 100%;
    min-width: 500px;
    max-width: 600px;
    grid-template-rows: auto auto auto auto auto;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-areas:
      "title title title title"
      "artist artist artist artist"
      "description description description description"
      "genre genre tempo capo"
      "tuning tuning key key"
      "difficulty difficulty . .";
  }
}


@media (min-width: 1100px) {
  .editingMetadataContainer {
    min-height: auto;
    max-width: 100%;
    grid-template-rows: auto 4rem auto;
    grid-template-columns: repeat(10, 1fr);
    grid-template-areas:
      "title title title artist artist artist genre genre tuning tuning"
      "description description description description description description difficulty difficulty capo capo"
      "description description description description description description tempo tempo key key";
    place-items: start;
  }

  .artist,
  .description {
    padding-right: 1rem;
  }
}

/* not ideal, but trying to prevent overlap due to page width breakpoint changes  */
@media (min-width: 1175px) {
  .editingMetadataContainer {
    max-width: 95%;
  }
}

@media (min-width: 1400px) {
  .editingMetadataContainer {
    max-width: 95%;
    grid-template-rows: auto auto;
    grid-template-columns: repeat(12, 1fr);
    grid-template-areas:
      "title title title artist artist artist genre genre tuning tuning capo capo"
      "description description description description description description difficulty difficulty tempo tempo key key";
    place-items: start;
  }
}


/* not ideal, but trying to prevent overlap due to page width breakpoint changes  */
@media (min-width: 1536px) {
  .editingMetadataContainer {
    max-width: 100%;
  }
}

/* not ideal, but trying to prevent overlap due to page width breakpoint changes  */
@media (min-width: 1650px) {
  .editingMetadataContainer {
    max-width: 95%;
  }
}


.viewingMetadataContainer {
  width: 100%;
  padding: 1rem;
  display: grid;
  grid-template-rows: auto auto auto;
  grid-template-columns: 1fr;
  grid-template-areas:
    "descriptionContainer"
    "separator"
    "metadataContainer";
}

.descriptionGrid {
  grid-area: descriptionContainer;
  display: grid;
  grid-template-rows: auto auto;
  grid-template-columns: repeat(4, 1fr);
  grid-template-areas:
    "description description description description"
    "createdBy createdBy createdBy pageViews";
  gap: 1rem;
  width: 100%;
}

.metadataGrid {
  grid-area: metadataContainer;
  display: grid;
  grid-template-rows: auto auto auto;
  grid-template-columns: repeat(4, 1fr);
  grid-template-areas:
    "genre genre tempo tempo"
    "tuning tuning capo capo"
    "difficulty difficulty key key";
  gap: 1rem;
  width: 100%;
  max-width: 25rem;
}

@media (min-width: 550px) {
  .viewingMetadataContainer {
    place-items: center;
  }

  .metadataGrid {
    column-gap: 8rem;
  }
}

@media (min-width: 1024px) {
  .viewingMetadataContainer {
    padding: 1rem 1.75rem;
    grid-template-rows: auto;
    grid-template-columns: 1fr auto 1fr;
    grid-template-areas:
      "descriptionContainer separator metadataContainer";
    place-items: start;
  }

  .descriptionGrid {
    width: 100%;
    grid-template-rows: auto auto;
    grid-template-columns: 1.5fr 1.5fr 0.5fr;
    row-gap: 0.5rem;
    grid-template-areas:
      "description description description"
      "createdBy createdBy pageViews";
  }

  .metadataGrid {
    width: 100%;
    max-width: none;
    grid-template-rows: auto auto;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-areas:
      "genre tuning difficulty"
      "tempo capo key";
    column-gap: 1rem;
    row-gap: 1.8rem;
  }

}

@media (min-width: 1100px) {

  .metadataGrid {
    column-gap: 2rem;
  }
}

.viewingMetadataContainer .description,
.viewingMetadataContainer .createdBy,
.viewingMetadataContainer .capo,
.viewingMetadataContainer .tuning,
.viewingMetadataContainer .genre,
.viewingMetadataContainer .tempo,
.viewingMetadataContainer .key,
.viewingMetadataContainer .difficulty {
  align-self: flex-start;
  justify-self: flex-start;
}

.viewingMetadataContainer .pageViews {
  justify-self: flex-end;
}

.title {
  grid-area: title;
}

.artist {
  grid-area: artist;
}

.usernameAndDate {
  grid-area: usernameAndDate;
}

.description {
  grid-area: description;
}

.genre {
  grid-area: genre;
}

.tuning {
  grid-area: tuning;
}

.tempo {
  grid-area: tempo;
}

.capo {
  grid-area: capo;
  justify-self: start;
}


.difficulty {
  grid-area: difficulty;
}

.key {
  grid-area: key;
  justify-self: start;
}

.pageViews {
  grid-area: pageViews;
}

.rating {
  grid-area: rating;
  max-width: 20rem;
}

.bookmark {
  grid-area: bookmark;
  max-width: 20rem;
}

.separator {
  grid-area: separator;
}

.createdBy {
  grid-area: createdBy;
}
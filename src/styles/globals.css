@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* 2 */
    --background: 337 25% 10%;
    /* 12 */
    --foreground: 330 91% 88%;

    /* muave 9, btw I am planning on having separators be gray/50, but you might want 
       options from the radix "border/separators" columns */
    --gray: 249 6% 57%;

    /* 2 */
    --muted: 337 25% 10%;

    /* 12 */
    --skeleton: 330 91% 88%;

    /* (light) 8 */
    --border: 336 55% 73%;

    /* 6 */
    --ring: 333 49% 29%;

    /* 9 */
    --primary: 336 80% 58%;
    /* (light) 1 */
    --primary-foreground: 340 100% 99%;

    /* 3 */
    --secondary: 333 45% 15%;
    /* 4 */
    --secondary-hover: 331 62% 19%;
    /* 5 */
    --secondary-active: 331 59% 23%;
    /* 11 */
    --secondary-foreground: 345 100% 79%;

    /* 5 */
    --accent: 331 59% 23%;
    /* (light) 1 */
    --accent-foreground: 340 100% 99%;

    --destructive: 0 90% 50%;
    --destructive-foreground: 324 77% 95%;

    /* gradient vars */
    /* 4 */
    --gradient-primary: 331 62% 19%;
    /* 1 */
    --gradient-secondary: 338 19% 8%;

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    /* FYI: it's not necessary to have the bg-gradient-to-br background here, could directly reference
       css vars in body { } below */
    /* bg-gradient-to-br from-background via-secondary-active to-border */
    @apply bg-background text-foreground;
    font-feature-settings:
      "rlig" 1,
      "calt" 1;
  }
}

/* necessary(?) to prevent background gradient disappearing when .noScroll is applied
   Scrolling seems to be a bit janky on iOS though when gradient is on pseudo ::before rather than
   actual body */
body::before {
  content: "";
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
  /* background: linear-gradient(145deg,
      #FEF7F9,
      #FACEDD,
      #E093B2) center / cover; */
  background: linear-gradient(145deg,
      hsl(var(--gradient-primary)),
      hsl(var(--gradient-secondary)),
      hsl(var(--gradient-secondary)),
      hsl(var(--gradient-primary))) center / cover;
  height: 100dvh;
}

body {
  min-height: 100dvh;
}

table {
  table-layout: fixed;
  width: 100%;
}

.baseFlex {
  display: flex;
  justify-content: center;
  align-items: center;
}

.baseVertFlex {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.modalGradient {
  background: linear-gradient(145deg,
      hsl(var(--gradient-primary)),
      hsl(var(--gradient-secondary)),
      hsl(var(--gradient-secondary)),
      hsl(var(--gradient-secondary)),
      hsl(var(--gradient-secondary)),
      hsl(var(--gradient-primary)));
  background-repeat: no-repeat;
  background-position: center;
}

.headerAndFooterBackgroundGradient {
  background-color: hsl(var(--background));
  box-shadow: 0 2px 8px 0 rgb(0 0 0 / 0.06);
}

/* used to emulate <dialog> behavior */
.noScroll {
  position: fixed;
  overflow-y: scroll;
  inline-size: 100%;
}

@keyframes countInAnimation {
  0% {
    transform: translateY(-30px);
    opacity: 0 !important;
  }

  50% {
    transform: translateY(0px);
    opacity: 1 !important;
  }

  100% {
    transform: translateY(30px);
    opacity: 0 !important;
  }
}

.countIn {
  /* TODO: change this later to be closer to framer-motion spring easing */
  animation: countInAnimation 1s ease-in-out;
}

@keyframes copyAndPasteAnimation {
  0% {
    opacity: 0;
    scale: 0;
  }

  50% {
    opacity: 1;
    scale: 1;
  }

  100% {
    opacity: 0;
    scale: 1;
  }
}

.copyAndPaste::after {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(255, 255, 255, 0.25);
  border-radius: 9999px;
  animation: copyAndPasteAnimation 0.35s ease-in-out;
}

kbd {
  background-color: #eee;
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  box-shadow:
    0 1px 1px rgba(0, 0, 0, 0.2),
    0 2px 0 0 rgba(255, 255, 255, 0.7) inset;
  color: #333;
  display: inline-block;
  font-size: 0.85em;
  font-weight: 700;
  line-height: 1;
  padding: 2px 4px;
  white-space: nowrap;
}

/* slightly modified animate-pulse, that doesn't go all the way down to
   0% opacity */
@keyframes pulseAnimation {
  50% {
    opacity: 0.5;
  }
}

.pulseAnimation {
  animation: pulseAnimation 2s cubic-bezier(0.4, 0.2, 0.6, 1) infinite;
}

@keyframes progressBarGrow {
  from {
    transform: scaleX(0);
  }

  to {
    transform: scaleX(1);
  }
}

.progressBar {
  animation: progressBarGrow linear;
  animation-fill-mode: forwards;
}

.progressBar-paused {
  animation-play-state: paused !important;
}
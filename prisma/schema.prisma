generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model UserMetadata {
    id                 Int    @id @default(autoincrement())
    userId             String @unique
    likedTabIds        Int[]  @default([])
    totalLikesReceived Int    @default(0)
    totalTabsCreated   Int    @default(0)
    pinnedTabId        Int?
}

model Tab {
    id                 Int       @id @default(autoincrement())
    title              String
    tuning             String
    bpm                Int?
    tabData            Json
    sectionProgression Json
    description        String?
    timeSignature      String?
    capo               Int?
    createdAt          DateTime  @default(now())
    createdById        String
    numberOfLikes      Int
    genre              Genre     @relation(fields: [genreId], references: [id])
    genreId            Int
    comments           Comment[]
}

model Genre {
    id    Int    @id @default(autoincrement())
    name  String @unique
    color String
    tabs  Tab[]
}

model Comment {
    id        Int       @id @default(autoincrement())
    text      String
    createdAt DateTime  @default(now())
    authorId  String
    tab       Tab       @relation(fields: [tabId], references: [id])
    tabId     Int
    replyTo   Comment?  @relation("Replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    replyToId Int?
    replies   Comment[] @relation("Replies")
}

model PromotedArtist {
    id        Int      @id @default(autoincrement())
    artistId  Int      @unique
    startDate DateTime
    endDate   DateTime
}
